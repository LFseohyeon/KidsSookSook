<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<sql id="searchType">
		<if test="types != null and keyword != null">
			where
			<trim prefixOverrides="or">
				<foreach item="type" collection="types">
					<trim prefix="or">
						<choose>
							<when test="type == 'userIdentification'.toString()">
								user_identification like concat('%', #{keyword}, '%')
							</when>
							<!-- <when test="type == 'content'.toString()">
								board_content like concat('%', #{keyword}, '%')
							</when>
							<when test="type == 'writer'.toString()">
								member_name like concat('%', #{keyword}, '%')
							</when> -->
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
	</sql>
	<select id="selectMemberAll" resultType="memberVO" parameterType="map">
		select user_id,  user_identification, user_password, user_email, user_phoneNumber, user_address, user_register_date,
		member_name, member_nickname, member_gender
		from view_member_info
		<!-- 검색 조건 동적쿼리로 추가 할수도? -->
		<include refid="searchType"/>
       limit #{startRow}, #{rowCount}
	</select>
	
	<select id="getTotal" resultType="long" parameterType="map">
		select count(user_id) from 
		<choose>
			<when test="userType == 'member'">
				tbl_member 
			</when>
			<when test="userType == 'institution'">
				tbl_institution
			</when>
			<otherwise>
				tbl_member
			</otherwise>
		</choose>
		<include refid="searchType"/>
	</select>
	
	<select id="selectMember" resultType="memberVO" parameterType="long">
		select user_id,  user_identification, user_password, user_email, user_phoneNumber, user_address, user_register_date,
		member_name, member_nickname, member_gender
		from view_member_info where user_id = #{userId}
	</select>
	
	<insert id="insertUser" parameterType="memberVO">
		insert into tbl_user
		(user_identification, user_password, user_email, user_phoneNumber, user_address, user_register_date)
		VALUES(#{userIdentification}, #{userPassword}, #{userEmail}, 
		#{userPhoneNumber}, #{userAddress}, CURRENT_TIMESTAMP)
	</insert>
	
	<insert id="insertMember" parameterType="memberVO">
		insert into tbl_member
		(member_name, member_nickname, member_gender)
		values(#{memberName}, #{memberNickname}, #{memberGender});
	</insert>
	
	<update id="updateUser" parameterType="memberVO">
		update tbl_user
		set user_email = #{userEmail}, user_address = #{userAddress}, user_phonenumber = #{userPhoneNumber}
		where user_id = #{userId}
	</update>
	
	<update id="updateMember" parameterType="memberVO">
		update tbl_member
		set member_nickname = #{memberNickname}
		where user_id = #{userId}
	</update>
	
	<delete id="deleteUser" parameterType="long">
		delete from tbl_user
		where user_id = #{userId}
	</delete>
	
	<delete id="deleteMember" parameterType="long">
		delete from tbl_member
		where user_id = #{userId}
	</delete>
	
	<insert id="institutionJoin" parameterType="institutionDTO">
		insert into view_institution_user
		(user_identification, user_password, user_email, user_phoneNumber,  
		user_address, institution_name, institution_business_number)
		values(#{userIdentification}, #{userPassword}, #{userEmail}, #{userPhoneNumber}, 
		#{userAddress}, #{institutionName}, #{institutionBusinessNumber})
	</insert>
	
	<insert id="nomalJoin" parameterType="memberDTO">
		insert into view_member_info
		(user_identification, user_password, member_name, member_nickname, 
		user_email, user_phoneNumber, user_address, member_gender)
		values(#{userIdentification}, #{userPassword}, #{memberName}, #{memberNickname}, 
		#{userEmail}, #{userPhoneNumber}, #{userAddress}, #{memberGender})
	</insert>
	
</mapper>